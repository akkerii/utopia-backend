name: Deploy to Cloud Run (Workload Identity Federation)

on:
  push:
    branches: [ "main" ]  # Trigger on push to main branch
  workflow_dispatch:      # Allow manual triggers

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1              # Change this to your preferred region
  SERVICE: utopia-backend                # Cloud Run service name
  REGION: us-central1                    # Change this to your preferred region

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 363.0.0'

    - name: Configure Docker to use gcloud as a credential helper
      run: |
        gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

    - name: Build and push container
      run: |
        docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
        env_vars: |
          NODE_ENV=production
          PORT=8080
        secrets: |
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}:latest
        flags: |
          --allow-unauthenticated
          --port=8080
          --memory=512Mi
          --cpu=1
          --min-instances=0
          --max-instances=10
          --concurrency=100
          --timeout=300
          --service-account=${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}


    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }} 